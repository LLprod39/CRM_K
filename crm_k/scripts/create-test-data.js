const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function createTestData() {
  try {
    console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const hashedPassword = await bcrypt.hash('teacher123', 12);
    
    const user = await prisma.user.create({
      data: {
        email: 'teacher@test.com',
        password: hashedPassword,
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –£—á–∏—Ç–µ–ª—å',
        role: 'USER'
      }
    });

    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${user.name} (${user.email})`);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
    console.log('üë∂ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞...');
    const student = await prisma.student.create({
      data: {
        fullName: '–¢–µ—Å—Ç–æ–≤—ã–π –£—á–µ–Ω–∏–∫',
        phone: '+7 (999) 123-45-67',
        age: 8,
        diagnosis: '–¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑',
        comment: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
        parentName: '–¢–µ—Å—Ç–æ–≤–∞—è –ú–∞–º–∞',
        userId: user.id
      }
    });

    console.log(`‚úÖ –£—á–µ–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω: ${student.fullName}`);

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π
    console.log('üìö –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è...');
    const now = new Date();
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–Ω—è—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    for (let i = 0; i < 30; i++) {
      const lessonDate = new Date(now);
      lessonDate.setDate(now.getDate() - i);
      
      // –°–æ–∑–¥–∞–µ–º 1-3 –∑–∞–Ω—è—Ç–∏—è –≤ –¥–µ–Ω—å —Å —Ä–∞–∑–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
      const lessonsCount = Math.random() > 0.7 ? Math.floor(Math.random() * 3) + 1 : 0;
      
      for (let j = 0; j < lessonsCount; j++) {
        const lessonTime = new Date(lessonDate);
        lessonTime.setHours(10 + j * 2, 0, 0, 0);
        
        const isCompleted = Math.random() > 0.3; // 70% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á—Ç–æ –∑–∞–Ω—è—Ç–∏–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ
        const isPaid = isCompleted && Math.random() > 0.4; // 60% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á—Ç–æ –æ–ø–ª–∞—á–µ–Ω–æ
        
        await prisma.lesson.create({
          data: {
            date: lessonTime,
            studentId: student.id,
            cost: 2000 + Math.floor(Math.random() * 1000), // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 2000 –¥–æ 3000
            isCompleted,
            isPaid,
            isCancelled: false,
            notes: `–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ ${i + 1}-${j + 1}`
          }
        });
      }
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è —Å–æ–∑–¥–∞–Ω—ã');

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('\nüìã –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('–ê–¥–º–∏–Ω: admin@crm.com / 123456');
    console.log('–£—á–∏—Ç–µ–ª—å: teacher@test.com / teacher123');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestData();
