const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testAdminRestrictions() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...\n')
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∞–¥–º–∏–Ω–æ–≤ –Ω–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤ —É –∞–¥–º–∏–Ω–æ–≤:')
    const adminsWithStudents = await prisma.user.findMany({
      where: {
        role: 'ADMIN'
      },
      include: {
        students: true
      }
    })

    for (const admin of adminsWithStudents) {
      if (admin.students.length > 0) {
        console.log(`   ‚ùå –ê–¥–º–∏–Ω "${admin.name}" –∏–º–µ–µ—Ç ${admin.students.length} –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤`)
      } else {
        console.log(`   ‚úÖ –ê–¥–º–∏–Ω "${admin.name}" –Ω–µ –∏–º–µ–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤`)
      }
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
    console.log('\n2Ô∏è‚É£ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–µ–Ω–∏–∫–æ–≤:')
    const totalStudents = await prisma.student.count()
    const assignedStudents = await prisma.student.count({
      where: {
        isAssigned: true,
        userId: { not: null }
      }
    })
    const unassignedStudents = await prisma.student.count({
      where: {
        isAssigned: false,
        userId: null
      }
    })

    console.log(`   üìä –í—Å–µ–≥–æ —É—á–µ–Ω–∏–∫–æ–≤: ${totalStudents}`)
    console.log(`   ‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–∏—Ç–µ–ª—è–º: ${assignedStudents}`)
    console.log(`   üîÑ –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö (–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è): ${unassignedStudents}`)

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∏—Ç–µ–ª–µ–π (–Ω–µ –∞–¥–º–∏–Ω–æ–≤)
    console.log('\n3Ô∏è‚É£ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∏—Ç–µ–ª—è—Ö:')
    const teachers = await prisma.user.findMany({
      where: {
        role: 'USER'
      },
      include: {
        _count: {
          select: {
            students: true
          }
        }
      }
    })

    console.log(`   üë• –í—Å–µ–≥–æ —É—á–∏—Ç–µ–ª–µ–π: ${teachers.length}`)
    for (const teacher of teachers) {
      console.log(`   üë§ ${teacher.name} (${teacher.email}): ${teacher._count.students} —É—á–µ–Ω–∏–∫–æ–≤`)
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–∫–∏
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–∏–π:')
    const lessonsWithAdminStudents = await prisma.lesson.findMany({
      where: {
        student: {
          user: {
            role: 'ADMIN'
          }
        }
      },
      include: {
        student: {
          include: {
            user: true
          }
        }
      }
    })

    if (lessonsWithAdminStudents.length > 0) {
      console.log(`   ‚ùå –ù–∞–π–¥–µ–Ω–æ ${lessonsWithAdminStudents.length} –∑–∞–Ω—è—Ç–∏–π —É —É—á–µ–Ω–∏–∫–æ–≤ –∞–¥–º–∏–Ω–æ–≤`)
      for (const lesson of lessonsWithAdminStudents) {
        console.log(`      - –ó–∞–Ω—è—Ç–∏–µ #${lesson.id} —É —É—á–µ–Ω–∏–∫–∞ "${lesson.student.fullName}" –∞–¥–º–∏–Ω–∞ "${lesson.student.user?.name}"`)
      }
    } else {
      console.log(`   ‚úÖ –ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π —É —É—á–µ–Ω–∏–∫–æ–≤ –∞–¥–º–∏–Ω–æ–≤`)
    }

    // 5. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\nüìã –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:')
    const hasAdminsWithStudents = adminsWithStudents.some(admin => admin.students.length > 0)
    const hasLessonsWithAdminStudents = lessonsWithAdminStudents.length > 0

    if (!hasAdminsWithStudents && !hasLessonsWithAdminStudents) {
      console.log('‚úÖ –í—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
      console.log('   - –ê–¥–º–∏–Ω—ã –Ω–µ –∏–º–µ—é—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤')
      console.log('   - –ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π —É —É—á–µ–Ω–∏–∫–æ–≤ –∞–¥–º–∏–Ω–æ–≤')
      console.log('   - –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ')
    } else {
      console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –∞–¥–º–∏–Ω–æ–≤')
      if (hasAdminsWithStudents) {
        console.log('   - –ù–∞–π–¥–µ–Ω—ã –∞–¥–º–∏–Ω—ã —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏')
      }
      if (hasLessonsWithAdminStudents) {
        console.log('   - –ù–∞–π–¥–µ–Ω—ã –∑–∞–Ω—è—Ç–∏—è —É —É—á–µ–Ω–∏–∫–æ–≤ –∞–¥–º–∏–Ω–æ–≤')
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testAdminRestrictions()
