const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function syncStudentBalances() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –±–∞–ª–∞–Ω—Å–æ–≤ —É—á–µ–Ω–∏–∫–æ–≤...')
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤
    const students = await prisma.student.findMany({
      select: { id: true, fullName: true }
    })
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${students.length} —É—á–µ–Ω–∏–∫–æ–≤`)
    
    let updatedCount = 0
    
    for (const student of students) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏ —É—á–µ–Ω–∏–∫–∞
        const lessons = await prisma.lesson.findMany({
          where: { studentId: student.id },
          select: {
            id: true,
            cost: true,
            isPaid: true,
            isCompleted: true,
            isCancelled: true
          }
        })

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É (–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ, –Ω–æ –Ω–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏)
        const prepaidAmount = lessons
          .filter(lesson => lesson.isPaid && !lesson.isCompleted && !lesson.isCancelled)
          .reduce((sum, lesson) => sum + lesson.cost, 0)

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å (–ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ, –Ω–æ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏)
        const debtAmount = lessons
          .filter(lesson => lesson.isCompleted && !lesson.isPaid && !lesson.isCancelled)
          .reduce((sum, lesson) => sum + lesson.cost, 0)

        // –ë–∞–ª–∞–Ω—Å = –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ - –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å
        const balance = prepaidAmount - debtAmount

        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await prisma.student.update({
          where: { id: student.id },
          data: { balance }
        })

        console.log(`‚úÖ ${student.fullName}: –±–∞–ª–∞–Ω—Å ${balance.toLocaleString()} ‚Ç∏ (–ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: ${prepaidAmount.toLocaleString()} ‚Ç∏, –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å: ${debtAmount.toLocaleString()} ‚Ç∏)`)
        updatedCount++
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è ${student.fullName}:`, error.message)
      }
    }
    
    console.log(`\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –∏–∑ ${students.length} —É—á–µ–Ω–∏–∫–æ–≤`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
syncStudentBalances()
