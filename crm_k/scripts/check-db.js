const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkDatabase() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

    const userCount = await prisma.user.count();
    const studentCount = await prisma.student.count();
    const lessonCount = await prisma.lesson.count();

    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}`);
    console.log(`üë∂ –£—á–µ–Ω–∏–∫–æ–≤: ${studentCount}`);
    console.log(`üìö –ó–∞–Ω—è—Ç–∏–π: ${lessonCount}`);

    if (userCount === 0) {
      console.log('\n‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/seed-test-data.js');
    } else {
      console.log('\n‚úÖ –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –µ—Å—Ç—å');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await prisma.user.findMany();
      console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
      users.forEach(user => {
        console.log(`  - ${user.name} (${user.email}) - ${user.role}`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();
